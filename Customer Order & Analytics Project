#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

SELECT *
  FROM BIT_DB.customers
 LIMIT 20;

SELECT *
  FROM BIT_DB.JanSales
 LIMIT 20;

SELECT *
  FROM BIT_DB.FebSales
 LIMIT 20;-- What column(s) do the customers table and the JanSales table have in common? orderID

SELECT *
  FROM BIT_DB.customers
 WHERE length(order_id) = 6 AND
       order_id <> 'Order ID';

#How many many unique orders were placed in January? In other words, how many distinct order ids do we have?
#Remember to filter out the blank and incorrect order IDs like we did in the "dealing with messy data" section of the previous lesson!

SELECT COUNT(DISTINCT orderid) 
  FROM BIT_DB.JanSales
 WHERE length(orderid) = 6 AND
       orderid <> 'Order ID';

#How many of those orders were for an iPhone?

SELECT COUNT(DISTINCT orderid) 
  FROM BIT_DB.JanSales
 WHERE length(orderid) = 6 AND
       orderid <> 'Order ID' AND
       Product = 'iPhone';

SELECT COUNT(DISTINCT orderid) 
  FROM BIT_DB.JanSales
 WHERE Product = 'iPhone' AND
       length(orderid) = 6 AND
       orderid <> 'Order ID'; 

#Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT acctnum
  FROM BIT_DB.customers AS cust
       INNER JOIN
       BIT_DB.FebSales Feb ON cust.order_id = FEB.orderid
 WHERE length(orderid) = 6 AND
       orderid <> 'Order ID';

#Which product was the cheapest one sold in January, and what was the price?

SELECT Product,
       price
  FROM BIT_DB.JanSales
 WHERE length(orderid) = 6 AND
       orderid <> 'Order ID'
 ORDER BY price ASC
 LIMIT 1;

SELECT DISTINCT product,
                price
  FROM BIT_DB.JanSales
 ORDER BY price ASC
 LIMIT 1;

#What is the total revenue for each product sold in January?
#(Revenue can be calculated using the number of products sold and the price of the products).

SELECT SUM(quantity) * price AS revenue,
       Product
  FROM BIT_DB.JanSales
 WHERE length(orderid) = 6 AND
       orderid <> 'Order ID'
 GROUP BY Product;

#Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT SUM(quantity) * price AS revenue,
       Product,
       Quantity,
       location
  FROM BIT_DB.FebSales
 WHERE location = '548 Lincoln St, Seattle, WA 98101';

SELECT sum(Quantity),
       product,
       sum(quantity) * price AS revenue
  FROM BIT_DB.FebSales
 WHERE location = '548 Lincoln St, Seattle, WA 98101'
 GROUP BY product;

#How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT count(DISTINCT cust.acctnum),
       avg(quantity * price) 
  FROM BIT_DB.FebSales Feb
       LEFT JOIN
       BIT_DB.customers cust ON FEB.orderid = cust.order_id
 WHERE Feb.Quantity > 2 AND
       length(orderid) = 6 AND
       orderid <> 'Order ID';

#1. 

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

#2. 

SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

#3. 

SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

SELECT orderdate from BIT_DB.FebSales;

#1.
 
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

#2.
 
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

#List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT distinct Product, sum(quantity)
FROM BIT_DB.FebSales 
WHERE location like '%Los Angeles%'
GROUP BY Product;

#Which locations in New York received at least 3 orders in January, and how many orders did they each receive? 

SELECT location
FROM BIT_DB.JanSales
WHERE location like '%New York%';

SELECT location, COUNT(orderID) AS total_orders
FROM BIT_DB.JanSales
WHERE location like '%New York%'
GROUP BY location
HAVING COUNT(orderID) >=3;

SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2;

#How many of each type of headphone were sold in February? 

SELECT Product, orderdate, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product like '%headphone%'
AND Quantity >=1
GROUP BY Product;

SELECT sum(Quantity) as quantity,
Product
FROM BIT_DB.FebSales 
WHERE Product like '%Headphones%'
GROUP BY Product;

#What was the average amount spent per account in February? (Hints: For this question, we want the average amount spent / number of accounts,
#not the amount spent by each account. To multiply, you can use the * symbol, and to divide, you can use the / symbol.)

SELECT SUM(price), COUNT(DISTINCT orderID) AS avg_spent_per_account
FROM BIT_DB.FebSales;

SELECT SUM(price) / COUNT(DISTINCT orderID) AS avg_spent_per_account
FROM BIT_DB.FebSales;

SELECT sum(quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

#What was the average quantity of products purchased per account in February? 
#(Hint: just like question 3, we want the overall average, not the average for each account individually).

SELECT SUM(quantity) / COUNT(DISTINCT orderID) AS avg_quantity
FROM BIT_DB.FebSales;

select sum(quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb

LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id

WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

#Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT sum(Quantity), product, sum(quantity * price) AS revenue
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY revenue desc 
LIMIT 1;

SELECT product, 
sum(quantity*price)
FROM BIT_DB.JanSales 
GROUP BY product
ORDER BY sum(quantity*price) desc 
LIMIT 1;
