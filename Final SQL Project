# Here are potential answers to the example questions in the final SQL project. 
# Note that there are often multiple ways to write SQL to come up with the same answer.

SELECT * FROM customers;

#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").

SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country <> 'USA';

#2. Show only the Customers from Brazil.

SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country = 'Brazil';

#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT InvoiceID, InvoiceDate, BillingCountry, FirstName, LastName
FROM invoices
JOIN customers
ON invoices.CustomerId = customers.CustomerId
WHERE BillingCountry = 'Brazil';

#4. Show the Employees who are Sales Agents.

SELECT * FROM employees;

SELECT FirstName, LastName, Title
FROM employees
WHERE Title = 'Sales Support Agent'
ORDER BY Title;

#5. Find a unique/distinct list of billing countries from the Invoice table.

SELECT * FROM invoices;

SELECT DISTINCT BillingCountry 
FROM invoices;

SELECT DISTINCT BillingCountry
FROM invoices
WHERE BillingCountry IN (SELECT BillingCountry
FROM customers);

SELECT DISTINCT BillingCountry, FirstName, LastName
FROM invoices
JOIN customers
ON invoices.BillingCountry = customers.Country
WHERE FirstName = 'Mark';

#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT 
employees.FirstName AS SalesAgent_FirstName, 
employees.LastName AS SalesAgent_LastName,
customers.CustomerId, 
customers.FirstName AS Customer_FirstName, 
customers.LastName AS Customer_LastName, 
invoices.InvoiceId, 
invoices.InvoiceDate, 
invoices.Total
FROM invoices
JOIN customers ON invoices.CustomerId = customers.CustomerId
JOIN employees ON customers.SupportRepId = employees.EmployeeId
ORDER BY employees.LastName, employees.FirstName, invoices.InvoiceDate;

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT
customers.CustomerID,
employees.FirstName AS SalesAgent_FirstName,
employees.LastName AS SalesAgent_LastName,
customers.FirstName AS Customer_FirstName,
customers.LastName AS Customer_LastName,
Customers.Country,
invoices.Total
FROM invoices
JOIN customers ON invoices.CustomerId = customers.CustomerId
JOIN employees ON customers.SupportRepId = employees.EmployeeId
ORDER BY employees.LastName, employees.FirstName;

#8. How many Invoices were there in 2009?

SELECT COUNT(InvoiceDate)
FROM invoices
WHERE InvoiceDate LIKE '%2009%';

SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

#9. What are the total sales for 2009?

SELECT SUM(Total) AS Total_Sales
FROM invoices
WHERE InvoiceDate LIKE '%2009%';

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

#10. Write a query that includes the purchased track name with each invoice line ID.

SELECT 
tracks.TrackId,
tracks.Name AS Track_Name,
invoice_items.InvoiceLineId, 
invoice_items.InvoiceId, 
invoice_items.UnitPrice,
invoice_items.Quantity
FROM invoice_items
JOIN tracks ON invoice_items.TrackId = tracks.TrackId
ORDER BY invoice_items.InvoiceLineId;

#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT 
tracks.TrackId,
tracks.Name AS Track_Name,
invoice_items.InvoiceLineId, 
invoice_items.InvoiceId, 
invoice_items.UnitPrice,
invoice_items.Quantity,
artists.Name AS Artist_Name
FROM invoice_items
LEFT JOIN tracks ON invoice_items.TrackId = tracks.TrackId
LEFT JOIN albums ON tracks.AlbumId = albums.AlbumId
LEFT JOIN artists ON albums.ArtistId = artists.ArtistId
ORDER BY invoice_items.InvoiceLineId; 

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT 
tracks.TrackId,
tracks.Name AS Track_Name,
invoice_items.InvoiceLineId, 
invoice_items.InvoiceId, 
invoice_items.UnitPrice,
invoice_items.Quantity,
artists.Name AS Artist_Name,
albums.Title, 
genres.Name AS Genre,
Media_types.Name AS Media_Type
FROM invoice_items
LEFT JOIN tracks ON invoice_items.TrackId = tracks.TrackId
LEFT JOIN albums ON tracks.AlbumId = albums.AlbumId
LEFT JOIN artists ON albums.ArtistId = artists.ArtistId
LEFT JOIN media_types ON tracks.MediaTypeId = media_types.MediaTypeId
LEFT JOIN genres ON tracks.GenreId = genres.GenreId
ORDER BY invoice_items.InvoiceLineId; 

#13. Show the total sales made by each sales agent.

SELECT SUM(invoices.Total) AS Total_Sales,
employees.FirstName AS SalesAgent_FirstName, 
employees.LastName AS SalesAgent_LastName,
customers.CustomerId, 
customers.FirstName AS Customer_FirstName, 
customers.LastName AS Customer_LastName, 
invoices.InvoiceId, 
invoices.InvoiceDate, 
invoices.Total,
invoice_items.Quantity,
SUM(invoice_items.Quantity) AS Total_Quantity
FROM invoices
JOIN customers ON invoices.CustomerId = customers.CustomerId
JOIN employees ON customers.SupportRepId = employees.EmployeeId
JOIN invoice_items ON invoices.InvoiceId = invoice_items.InvoiceId
GROUP BY employees.LastName, employees.FirstName;

SELECT SUM(invoices.Total) AS Total_Sales,
employees.FirstName AS SalesAgent_FirstName, 
employees.LastName AS SalesAgent_LastName,
customers.CustomerId, 
customers.FirstName AS Customer_FirstName, 
customers.LastName AS Customer_LastName, 
invoices.InvoiceId, 
invoices.InvoiceDate, 
invoices.Total,
invoice_items.Quantity,
SUM(invoice_items.Quantity) AS Total_Quantity
FROM invoices
JOIN customers ON invoices.CustomerId = customers.CustomerId
JOIN employees ON customers.SupportRepId = employees.EmployeeId
JOIN invoice_items ON invoices.InvoiceId = invoice_items.InvoiceId
GROUP BY employees.LastName, employees.FirstName,
customers.CustomerId, customers.FirstName, customers.LastName,
invoices.InvoiceId, invoices.InvoiceDate;

#14. Which sales agent made the most dollars in sales in 2009?

SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM Employees AS emp
JOIN Customers AS cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN Invoices AS Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC 
LIMIT 1;

SELECT
employees.FirstName AS SalesAgent_FirstName, 
employees.LastName AS SalesAgent_LastName,
SUM(invoice_items.Quantity) AS Total_Quantity,
SUM(invoices.Total) AS Total_Sales
FROM invoices
JOIN customers ON invoices.CustomerId = customers.CustomerId
JOIN employees ON customers.SupportRepId = employees.EmployeeId
JOIN invoice_items ON invoices.InvoiceId = invoice_items.InvoiceId
WHERE InvoiceDate LIKE '%2009%'
GROUP BY employees.LastName, employees.FirstName
ORDER BY Total_Sales DESC
LIMIT 1;
